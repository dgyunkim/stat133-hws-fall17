runApp()
install.packages("shinydashboard")
runApp()
runApp()
install.packages("shinythemes")
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
names(tags)
?tags$datalist()
??tags$datalist()
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
library(dplyr)
library(readr)
mydat <- read_csv("../../data/cleandata/cleanscores.csv")
mydat
grade <- mydat %>%
group_by(Grade) %>%
summarise(Freq = table(Grade), Prop = prop.table(table(Grade)))
grade
grade <- mydat %>%
group_by(Grade) %>%
summarise(Freq = table(Grade))
grade
grade$Prop <- prop.table(grade$Freq)
grade
grade$Prop <- round(prop.table(grade$Freq), digit = 2)
grae
grade
grade_A <- grade[1]
grade[1] <- grade[3]
grade[3] <- grade[2]
grade[2] <- grade_A
grade
grade <- as.data.frame(grade)
grade
grade <- mydat %>%
group_by(Grade) %>%
summarise(Freq = table(Grade))
grade$Prop <- round(prop.table(grade$Freq), digit = 2)
grade <- as.data.frame(grade)
grade
grade[1]
grade_A <- grade[1,]
grade[1,] <- grade[3,]
grade[3,] <- grade[2,]
grade[2,] <- grade_A
grade
grade <- mydat %>%
group_by(Grade) %>%
summarise(Freq = table(Grade))
grade$Prop <- round(prop.table(grade$Freq), digit = 2)
grade <- as.data.frame(grade)
grade
grade_A <- grade[1,]
grade_B <- grade[4,]
grade_C <- grade[7,]
grade[1,] <- grade[3,]
grade[3,] <- grade[2,]
grade[2,] <- grade_A
grade[4,] <- grade[6,]
grade[6,] <- grade[5,]
grade[5,] <- grade_B
grade[7,] <- grade[9,]
grade[9,] <- grade[8,]
grade[8,] <- grade_C
grade
sum(grade$Prop)
sum(grade$Freq)
mode(grade$Grade)
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars
grade
grade %>%
ggvis(~Grade) %>%
layer_bars
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars
mydat %>% group_by(Grade)
mydat %>% group_by(Grade) %>% count()
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars
~Grade
grade %>%
ggvis(x = Grade, y = Freq) %>%
layer_bars
grade %>%
ggvis(x = Grade, y = Freq) %>%
layer_barsgrade %>%
ggvis(x = grade$Grade, y = grade$Freq) %>%
layer_ba
grade %>%
ggvis(x = grade$Grade, y = grade$Freq) %>%
layer_bars
?ggvis()
grade~Grade
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bar
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bar()
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars()
grade[1]
grade[1,]
grade <- as.array(grade)
grade
grade
layer_bars
?layer_bars
grade %>%
ggivs(~Grade, ~Freq) %>%
layer_bars()
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars()
?scale_ordinal
grade
grade <- mydat %>%
group_by(Grade) %>%
summarise(Freq = table(Grade))
grade$Prop <- round(prop.table(grade$Freq), digit = 2)
grade <- as.data.frame(grade)
grade
grade[c(2,1),]
order <- c(3, 1, 2, 6, 4, 5, 9, 7, 8, 10, 11)
grade[order,]
grade <- grade[order,]
grade
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars() %>%
scale_ordinal('x', domain = c('A+', 'A', 'A-', ))
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars()
grade <- mydat %>%
group_by(Grade) %>%
summarise(Freq = table(Grade))
grade$Prop <- round(prop.table(grade$Freq), digit = 2)
grade <- as.data.frame(grade)
grade_A <- grade[1,]
grade_B <- grade[4,]
grade_C <- grade[7,]
grade[1,] <- grade[3,]
grade[3,] <- grade[2,]
grade[2,] <- grade_A
grade[4,] <- grade[6,]
grade[6,] <- grade[5,]
grade[5,] <- grade_B
grade[7,] <- grade[9,]
grade[9,] <- grade[8,]
grade[8,] <- grade_C
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars() %>%
scale_ordinal('x', domain = c('A+', 'A', 'A-', 'B+', 'B', 'B-',
'C+', 'C', 'C-', 'D', 'F'))
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
grade <- mydat %>%
group_by(Grade) %>%
summarise(Freq = table(Grade))
grade
as.factor(grade$Grade)
grade$Grade <- as.factor(grade$Grade)
grade
grade <- as.data.frame(grade)
grade
grade$Grade
grade <- mydat %>%
group_by(Grade) %>%
summarise(Freq = table(Grade))
grade$Prop <- round(prop.table(grade$Freq), digit = 2)
grade <- as.data.frame(grade)
grade_A <- grade[1,]
grade_B <- grade[4,]
grade_C <- grade[7,]
grade[1,] <- grade[3,]
grade[3,] <- grade[2,]
grade[2,] <- grade_A
grade[4,] <- grade[6,]
grade[6,] <- grade[5,]
grade[5,] <- grade_B
grade[7,] <- grade[9,]
grade[9,] <- grade[8,]
grade[8,] <- grade_C
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars() %>%
scale_ordinal('x', domain = c('A+', 'A', 'A-', 'B+', 'B', 'B-',
'C+', 'C', 'C-', 'D', 'F'))
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
grade %>%
ggvis(~Grade, frequency = ~Freq) %>%
layer_bars() %>%
scale_ordinal('x', domain = c('A+', 'A', 'A-', 'B+', 'B', 'B-',
'C+', 'C', 'C-', 'D', 'F')) %>%
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Grade Visualizer"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
h4("Grade distribution"),
tableOutput("grade")
),
# Show a plot of the generated distribution
mainPanel(
ggvisOutput("barchart")
)
)
)
grade %>%
ggvis(~Grade, frequency = ~Freq) %>%
layer_bars() %>%
scale_ordinal('x', domain = c('A+', 'A', 'A-', 'B+', 'B', 'B-',
'C+', 'C', 'C-', 'D', 'F'))
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars() %>%
scale_ordinal('x', domain = c('A+', 'A', 'A-', 'B+', 'B', 'B-',
'C+', 'C', 'C-', 'D', 'F')) %>%
add_axis('y', title = frequency)
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars() %>%
scale_ordinal('x', domain = c('A+', 'A', 'A-', 'B+', 'B', 'B-',
'C+', 'C', 'C-', 'D', 'F')) %>%
ylab("frequency")
grade %>%
ggvis(~Grade, ~Freq) %>%
layer_bars() %>%
scale_ordinal('x', domain = c('A+', 'A', 'A-', 'B+', 'B', 'B-',
'C+', 'C', 'C-', 'D', 'F')) %>%
add_axis('y', title = 'frequency')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
summary(mydat)
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
s <- "HW1"
switch(s,
HW1 = 1,
HW2 = 2)
a <- switch(s,
HW1 = 1,
HW2 = 2)
a
print_stats(summary_stats(mydat[[a]]))
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
?prop
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
colnames(mydat)
col_name <- colnames(mydat)
hist_name <- colnames(mydat)
hist_name
hist_nmae[length(hist_name)] <- NULL
hist_name[length(hist_name)] <- NULL
length(hist_name)
hist_name[length(hist_name)]
hist_name[length(hist_name)] <- NULL
hist_name[-length(hist_name)]
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
hist_name
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
summary(mydat)
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
mydat$ATT
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test1')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
?ggivis
?ggvis
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
?layer_lines
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
?opacity
??opacity
?layer_model_predictions
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
a
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points()
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points() %>%
layer_model_predictions(model = )
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
??correlation
??correlation
crr
?crr
?corr
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points() %>%
layer_model_predictions(model = )
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points() %>%
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points()
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points()
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points(fill := "#893a6a")
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points(fill := "#89a3a6")
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points(fill := "#893a6a")
mydat %>%
ggvis(~Test1, ~Overall, opacity = 0.5) %>%
layer_points(fill := "#893a6a")
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points(fill := "#893a6a", opacity = 0.5)
mydat %>%
ggvis(~Test1, ~Overall) %>%
layer_points(fill := "#893a6a", opacity := 0.5)
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
?layer_model_predictions
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
?cov
?corr
mydat["HW1"]
mydat[["HW1"]]
runApp('~/Desktop/STAT 133/stat133-hws-fall17/hw04/app/test2')
rm(list = ls())
library(shiny)
library(dplyr)
library(readr)
library(ggvis)
source("../code/functions.R")
setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw04/app")
source("../code/functions.R")
mydat <- read_csv("../data/cleandata/cleanscores.csv")
var_name <- colnames(mydat)
var_name <- var_name[-length(var_name)]
grade <- mydat %>%
group_by(Grade) %>%
count()
grade
colnames(grade)
grade$Prop <- prop.table(grade$n)
grade
grade$Prop <- round(prop.table(grade$n), digits = 2)
grade
?round
grade <- as.data.frame(grade)
grade
colnames(grade) <- c("Grade", "Freq", "Prop")
grade
grade_A <- grade[1,]
grade_B <- grade[4,]
grade_C <- grade[7,]
grade[1,] <- grade[3,]
grade[3,] <- grade[2,]
grade[2,] <- grade_A
grade[4,] <- grade[6,]
grade[6,] <- grade[5,]
grade[5,] <- grade_B
grade[7,] <- grade[9,]
grade[9,] <- grade[8,]
grade[8,] <- grade_C
grade
grade_A
mode(grade_A)
rm(grade_A)
rm(grade_B)
rm(grade_C)
mode(grade)
grade <- as.data.frame(grade)
grade(grade)
mode(grade)
is.data.frame(grade)
mydat <- read_csv("../data/cleandata/cleanscores.csv")
var_name <- colnames(mydat)
var_name <- var_name[-length(var_name)]
grade <- mydat %>%
group_by(Grade) %>%
count()
grade$Prop <- round(prop.table(grade$n), digits = 2)
grade <- as.data.frame(grade)
colnames(grade) <- c("Grade", "Freq", "Prop")
grade_A <- grade[1,] # temporary list
grade_B <- grade[4,] # temporary list
grade_C <- grade[7,] # temporary list
grade[1,] <- grade[3,]
grade[3,] <- grade[2,]
grade[2,] <- grade_A
grade[4,] <- grade[6,]
grade[6,] <- grade[5,]
grade[5,] <- grade_B
grade[7,] <- grade[9,]
grade[9,] <- grade[8,]
grade[8,] <- grade_C
rm(grade_A)
rm(grade_B)
rm(grade_C)
is.data.frame(grade)
grade
runApp('test1')
runApp('test2')
runApp()
mydat <- read_csv("../data/cleandata/cleanscores.csv")
var_name <- colnames(mydat)
var_name <- var_name[-length(var_name)]
grade <- mydat %>%
group_by(Grade) %>%
count()
grade$Prop <- round(prop.table(grade$n), digits = 2)
grade <- as.data.frame(grade)
colnames(grade) <- c("Grade", "Freq", "Prop")
grade_A <- grade[1,] # temporary list
grade_B <- grade[4,] # temporary list
grade_C <- grade[7,] # temporary list
grade[1,] <- grade[3,]
grade[3,] <- grade[2,]
grade[2,] <- grade_A
grade[4,] <- grade[6,]
grade[6,] <- grade[5,]
grade[5,] <- grade_B
grade[7,] <- grade[9,]
grade[9,] <- grade[8,]
grade[8,] <- grade_C
rm(grade_A)
rm(grade_B)
rm(grade_C)
runApp()
runApp()
runApp()
...
spec(...)
runApp()
runApp()
runApp()
