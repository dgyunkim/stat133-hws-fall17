summarise(filter(dat, experience >= 5 & experience <= 10 & position == 'PF') , mean_PF = mean(age), sd_PF = sd(age))
```
Use the data frame gsw to make a scatterplot of height and weight
```{r}
ggplot(data = gsw, aes(x= height, y = weight)) + geom_point()
```
Find out how to make another scatterplot of height and weight, using geom_text() to display the names of the players
```{r}
ggplot(data = gsw, aes(x= height, y = weight)) + geom_point() + geom_text(aes(label = player))
```
Get a scatter plot of height and weight, for ALL the warriors, displaying their names with geom_label()
```{r}
all_gsw <- select(filter(dat, team == 'GSW'), player, height, weight)
ggplot(data = all_gsw, aes(x = height, y = weight)) + geom_point() + geom_text(aes(label = player))
```
Get a density plot of salary (for all NBA players)
```{r}
```
Get a histogram of points2 with binwidth of 50 (for all NBA players)
Get a barchart of the position frequencies (for all NBA players)
Make a scatterplot of experience and salary of all centers, and use geom_smooth() to add a regression line
Repeat the same scatterplot of experience and salary of all centers, but now use geom_smooth() to add a loess line
Make scatterplots of experience and salary faceting by position
Make scatterplots of experience and salary faceting by team
Make density plots of age faceting by team
Make scatterplots of height and weight faceting by position
Make scatterplots of height and weight, with a 2-dimensional density, geom_density2d(), faceting by position
log(-2)
dat <- data.frame()
dat <- data.frame(
col1 = LETTERS[1:5],
col2 = seq(from = 10, to = 50, by = 10),
col3 = c(TRUE, TRUE, FALSE, TRUE, FALSE)
)
dat
dat
dat$1
dat[1]
dat[[1]]
dat <- data.frame(
col1 = LETTERS[1:5],
col2 = seq(from = 10, to = 50, by = 10),
col3 = c(TRUE, TRUE, FALSE, TRUE, FALSE),
stringsAsFactors = FALSE
)
dat
class(dat$col1)
class[[1]]
dat[[1]]
dat[1]
dat[1, ]
dat[,1]
dat[1]
dat[col1]
dat["col1"]
dat$col1
dat$col4
name <- c("first", "last", "gender", "born", "spell")
df <- data.frame(
)
first <- c("Harry", "Hermione", "Ron", "Luna")
last <- c("Potter", "Granger", "Weasley", "Lovegood")
gender <- c("male", "female", "male", "female")
born <- c(1980, 1979, 1980, 1981)
spell <- c("sectumsempra", "alohomora", "riddikulus", "episkey")
df <- data.frame(first, last, gender, born, spell, stringAsFactor = FALSE)
df
df <- data.frame(first, last, gender, born, spell, stringsAsFactor = FALSE)
df
df <- data.frame(first, last, gender, born, spell, stringsAsFactors = FALSE)
df
df[c(1, 0, 1, 0)]
df[c(1, 0, 1, 0), ]
df[c(TRUE, FALSE, TRUE, FALSE), ]
df[c(TRUE, FALSE, TRUE, FALSE) ]
df[df[,4] == 1980,]
df[df$born == 1980]
df[df$born == 1980]
df$born == 1980
df[df$born == 1980,]
df[df$born == 1980]
df[df$born == 1980,]
df[, df$born == 1980]
1 & 2
df[1:3, TRUE]
df[1:3, FALSE]
df[1:3, ]
df[1:3, 1:2]
df[, c(5,1)]
rm(dat)
ls()
df
my_list <- list(
col1 = LETTERS[1:5],
col2 = seq(from = 10, to = 50, by = 10),
col3 = c(TRUE, TRUE, FALSE, TRUE, FALSE)
)
my_table2 <- data.frame(my_list)
my_table2
my_table1 <- data.frame(
col1 = LETTERS[1:5],
col2 = seq(from = 10, to = 50, by = 10),
col3 = c(TRUE, TRUE, FALSE, TRUE, FALSE)
)
my_table1
class(my_table1)
class(my_table2)
?attribute
?attributes
df
df[c("last", "first", "spell", "born")]
df
names(df[2]) <- "Family"
df
df[2]
names(df)
arrtibutes(df)
attributes(df)
attributes(df)$names[2] <- "Family"
df
attributes(df)
attributes(df)$row.names[2] <- "Two"
df
df
dfdf
df
attributes(df)$class <- list()
?order
?sort
?%>%
??%>%
?dplyr
library(dplyr)
?%>%
?dplyr
df
df%>% filter(gender == "female")
df
sw
df
filter(genter == "male")
filter(gender == "male")
filter(gender)
filter(dt, gender == "male")
filter(df, gender == "male")
df
arrange(select(df, first, gender, born), born)
df%>%select(first, gender, born)%>%arrange(born)
df%>%select(born)$>$summarise(max_born = max(born))
df%>%select(born)%>%summarise(max_born = max(born))
df
df%>%group_by(gender)%>%summarise(max_born = max(born))
summarise(df, group_by(gender), max_born = max(born))
summarise(group_by(df, gender), max_born = max(born))
3xalqo <- 12
_30d0_dl <- 12
.sdowk <- 123213
.sdowk3
.sdowk
.var_name <- "name"
.var_name
VarName <- yes
VarName <- 123
var-name <- 123
math+doq <- 12
log10
log(10)/(5/2 - log(2/3))
(1/2)^10
log(3/2)
(log(1/10)-1/2)/log(2/3)
(log(1/10) - 5) / log(2/3)
exp(-10)
exp(-10)*1000
14!
factanal(14)
factorial(14)
10^14/factorial(14)
exp(-10)*1147
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")
---
title: "HW03 - Ranking NBA Teams"
author: "Donggyun Kim"
date: "2017-10-07"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
`r setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")`
`r library(readr)`
`r library(dplyr)`
`r library(ggplot2)`
`
Basic Rankings
---
title: "HW03 - Ranking NBA Teams"
author: "Donggyun Kim"
date: "2017-10-07"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
`r setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")`
`r library(readr)`
`r library(dplyr)`
`r library(ggplot2)`
Basic Rankings
---
title: "HW03 - Ranking NBA Teams"
author: "Donggyun Kim"
date: "2017-10-07"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
`r setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")`
`r library(readr)`
`r library(dplyr)`
`r library(ggplot2)`
Basic Rankings
---
title: "HW03 - Ranking NBA Teams"
author: "Donggyun Kim"
date: "2017-10-07"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
`r setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")`
`r library(readr)`
`r library(dplyr)`
`r library(ggplot2)`
Basic Rankings
`r setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")`
`r library(readr)`
`r library(dplyr)`
`r library(ggplot2)`
library(dplyr)
setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")
library(readr)
library(dplyr)
library(ggplot2)
setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")
library(readr)
library(dplyr)
library(ggplot2)
read_csv("./data/teams.csv")
setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")
library(readr)
library(dplyr)
library(ggplot2)
read_csv("./data/nba2017_teams.csv")
setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")
library(readr)
library(dplyr)
library(ggplot2)
teams<- read_csv("./data/nba2017_teams.csv")
summary(teams)
ggplot(teams) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = salary, y = team)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = team, y = salary)) +
geom_bar(stat='identity') +
coord_flip()
?reorder
?order
ggplot(teams, aes(x = order(team), y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = order(team, decreasing = TRUE), y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = reorder(team), y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = reorder(team, 30), y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = team, y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = team, y = salary)) +
geom_bar() +
coord_flip()
tat='identity'
ggplot(teams, aes(x = team, y = salary)) +
geom_bar(stat='identity') +
coord_flip()
?geom_bar
ggplot(teams, aes(x = reorder(team, team) y = salary)) +
ggplot(teams, aes(x = reorder(team, m) y = salary)) +
ggplot(teams, aes(x = reorder(team, n) y = salary)) +
ggplot(teams, aes(x = reorder(team, -salary) y = salary)) +
ggplot(teams, aes(x = reorder(team, -salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = reorder(team, salary), y = salary), xlab("Team")) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = reorder(team, salary), y = salary), xlab = "Team", ) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(Team = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = Salary)
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Salary"")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary), main = "NBA Teams ranked by Total Salary") +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Salary", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_vline(mean(salary)) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_vline(xintercept = means(salary)) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_vline(xintercept = mean(salary)) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_vline(xintercept = mean(teams$salary)) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_vline(xintercept = 80)) +
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_vline(xintercept = 80) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_vline(xintercept = 80, col = "Red") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_vline(xintercept = 100, col = "Red") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(xintercept = 100) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = 100) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(salary)) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$salary)) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$salary), col = "Red") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$salary), col = "Red", width = 3) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$salary), col = "Red"") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$salary), col = "Red) +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$salary), col = "Red") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$salary), col = "Red") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, points), y = points)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$points), col = "Red") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, points), y = points)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$points), col = "Red") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Points")
ggplot(teams, aes(x = reorder(team, points), y = points)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$points), col = "Red") +
labs(x = "Team", y = "Total Points", title = "NBA Teams ranked by Total Points")
---
title: "HW03 - Ranking NBA Teams"
author: "Donggyun Kim"
date: "2017-10-07"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r, message=FALSE}
setwd("~/Desktop/STAT 133/stat133-hws-fall17/hw03/")
library(readr)
library(dplyr)
library(ggplot2)
teams<- read_csv("./data/nba2017_teams.csv")
```
# Basic Rankings
```{r}
ggplot(teams, aes(x = reorder(team, salary), y = salary)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$salary), col = "Red") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
```
```{r}
ggplot(teams, aes(x = reorder(team, points), y = points)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$points), col = "Red") +
labs(x = "Team", y = "Total Points", title = "NBA Teams ranked by Total Points")
```
ggplot(teams, aes(x = reorder(team, points), y = points)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$points), col = "Red") +
labs(x = "Team", y = "Total Points", title = "NBA Teams ranked by Total Points")
ggplot(teams, aes(x = reorder(team, points), y = points)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$points), col = "Red") +
labs(x = "Team", y = "Total Points", title = "NBA Teams ranked by Total Points")
ggplot(teams, aes(x = reorder(team, efficiency), y = efficiency)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$efficiency), col = "Red") +
labs(x = "Team", y = "Salary (in millions)", title = "NBA Teams ranked by Total Salary")
ggplot(teams, aes(x = reorder(team, efficiency), y = efficiency)) +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(yintercept = mean(teams$efficiency), col = "Red") +
labs(x = "Team", y = "Total Efficiency", title = "NBA Teams ranked by Total Efficiency")
