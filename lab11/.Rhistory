dat <- read.csv("mobile-food-sf.csv", stringsAsFactors = FALSE)
summary(dat)
github <- "https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2017"
textfile <- "/master/data/may-logs.txt"
download.file(url = paste0(github, textfile), destfile = "may-logs.txt")
logs <- readLines('may-logs.txt')
head(logs)
summary(logs)
str(logs)
set.seed(98765)
s <- sample(1:length(logs), size = 50)
sublogs <- logs[s]
head(sublogs)
?grep
grep("jpg", sublogs)
sublogs[grep("jpg", sublogs)]
grep("jpg", sublogs, value = TRUE)
grep("\\.jpg", sublogs, value = TRUE)
library(stringr)
str_detect(string = sublogs, pattern ="\\.jpg")
str_detect(string = sublogs, pattern = "\\.png")
str_extract(string = sublogs, pattern = "\\.jpg")
jpgs <- str_detect(string = logs, pattern = "\\.jpg")
sum(jpgs)
pngs <- str_detect(string = logs, pattern = "\\.png")
sum(pngs)
gifs <- str_detect(string = logs, pattern = "\\.gif")
sum(gifs)
icos <- str_detect(string = logs, pattern = "\\.ico")
sum(icos)
jpg_png_lines <- str_dectec(string = sublogs, pattern = "[jp][pn][g]")
sum(jpg_png_lines)
jpg_png_lines <- str_detect(string = sublogs, pattern = "[jp][pn][g]")
sum(jpg_png_lines)
jpg_png_lines <- str)detect(string = sublogs, pattern = "\\.[jp][pn][g]")
sum(jpg_png_lines)
image_lines1 <- str_detect(string = sublogs, pattern = "\\.[g][ic][fo]")
sum(image_lines1)
imgae_lines1
image)lines1
image_lines1
sublogs[image_lines1]
[gif]
"[gif]"
image_lines1 <- str_detect(string = sublogs, pattern = "\\.[gpji][inpc][fgo]")
sum(image_lines1)
grep("\\.jpg", sublogs, value = TRUE)
str_detect(string = sublogs, pattern ="\\.jpg")
str_detect(string = sublogs, pattern = "\\.png")
str_extract(string = sublogs, pattern = "\\.jpg")
jpgs <- str_detect(string = logs, pattern = "\\.jpg")
sum(jpgs)
pngs <- str_detect(string = logs, pattern = "\\.png")
sum(pngs)
gifs <- str_detect(string = logs, pattern = "\\.gif")
sum(gifs)
icos <- str_detect(string = logs, pattern = "\\.ico")
sum(icos)
jpg_png_lines <- str_detect(string = sublogs, pattern = "[jp][pn][g]")
sum(jpg_png_lines)
jpg_png_lines <- str_detect(string = sublogs, pattern = "\\.[jp][pn][g]")
sum(jpg_png_lines)
image_lines1 <- str_detect(string = sublogs, pattern = "\\.[gpji][inpc][fgo]")
sum(image_lines1)
image_lines1 <- str_detect(string = sublogs, pattern = "\\.[jpg][pni][gf]")
sum(image_lines1)
pngs <- str_detect(string = logs, pattern = "\\.png")
sum(pngs)
gifs <- str_detect(string = logs, pattern = "\\.gif")
sum(gifs)
icos <- str_detect(string = logs, pattern = "\\.ico")
sum(icos)
jpg_png_lines <- str_detect(string = sublogs, pattern = "[jp][pn][g]")
sum(jpg_png_lines)
jpg_png_lines <- str_detect(string = sublogs, pattern = "\\.[jp][pn][g]")
sum(jpg_png_lines)
image_lines1 <- str_detect(string = sublogs, pattern = "\\.[jpg][pni][gf]")
sum(image_lines1)
grep("\\.jpg", sublogs, value = TRUE)
library(stringr)
github <- "https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2017"
textfile <- "/master/data/may-logs.txt"
download.file(url = paste0(github, textfile), destfile = "may-logs.txt")
logs <- readLines('may-logs.txt')
head(logs)
summary(logs)
set.seed(98765)
s <- sample(1:length(logs), size = 50)
sublogs <- logs[s]
head(sublogs)
grep("\\.jpg", sublogs, value = TRUE)
str_detect(string = sublogs, pattern ="\\.jpg")
str_detect(string = sublogs, pattern = "\\.png")
str_extract(string = sublogs, pattern = "\\.jpg")
jpgs <- str_detect(string = logs, pattern = "\\.jpg")
sum(jpgs)
pngs <- str_detect(string = logs, pattern = "\\.png")
sum(pngs)
gifs <- str_detect(string = logs, pattern = "\\.gif")
sum(gifs)
icos <- str_detect(string = logs, pattern = "\\.ico")
sum(icos)
jpg_png_lines <- str_detect(string = sublogs, pattern = "[jp][pn][g]")
sum(jpg_png_lines)
jpg_png_lines <- str_detect(string = sublogs, pattern = "\\.[jp][pn][g]")
sum(jpg_png_lines)
image_lines1 <- str_detect(string = sublogs, pattern = "\\.[jpg][pni][gf]")
sum(image_lines1)
image_lines1 <- str_detect(string = sublogs, pattern = "\\.[jpgi][pnic][gfo]")
sum(image_lines1)
image_lines1 <- str_detect(string = sublogs, pattern = "[jpgi][pnic][gfo]")
sum(image_lines1)
str_extract(string = sublogs, pattern = "[jpgi][pnic][gfo]")
jpg_png <- str_detect(sublogs, "(\\.jpg|\\.png")
jpg_png <- str_detect(string = sublogs, pattern = "\\.jpg|\\.png")
sum()
sum(jpg_png)
str_extract(string = sublogs, pattern = "\\.jpg|\\.png")
image_lines <- str_detect(string = sublogs, pattern = "\\.jpg|\\.png|\\.gif|\\.ico")
sum(image_lines)
images_output <- str_extract(string = sublogs, patter = "(\\.jpg)|(\\.png)|(\\.gif)|(\\.ico)")
images_output
images_output <- str_extract(string = sublogs, pattern = "(\\.jpg)|(\\.png)|(\\.gif)|(\\.ico)")
images_output
img_extensions <- str_extract(string = logs, pattern = "(\\.jpg)|(\\.png)|(\\.ico)|(\\.gif)")
table(img_extensions)
rm(list = ls())
dat <- read.csv("mobile-food-sf.csv", stringsAsFactors = FALSE)
summary(dat)
library(stringr)
str(dat)
time1 <- "10AM"
str_sub(string = time1, start = 1, end = 2)
str_sub(string = time1, start = 3, end = 4)
times <- c("12PM", "10AM", "9AM", "8AM")
str_sub(times, nchar(times) - 4, nchar(times) -3)
str_sub(times, 1, 2)
str_sub(times, 1, nchar(times))
str_sub(times, 1, nchar(times) - 2)
str_sub(times, 3, 4)
str_sub(times, nchar(times) - 1, nchar(times))
str_sub(times, -2)
str_sub(times, 0)
str_sub(times, -1)
str_sub(times, -3)
str_sub(times, -4)
str_sub(times, -5)
nchar(times)
substr(times, -1)
substr(times, -1, stop = 0)
substr(times, -1, stop = 4)
substr(times, -2, stop = 4)
substr(times, 2, stop = 4)
str_sub(times, )
str_sub(times, 1, nchar(times) - 2)
str_sub(times, nchar(times) - 1, nchar(times))
str_sub(times, -2)
str_replace()
str_replace(stirng = times, pattern = "AM|PM", replacement = ":00")
str_replace(string = times, pattern = "AM|PM", replacement = ":00")
hours <- as.numeric(str_replace(times, pattern = 'AM|PM', replacement = ''))
periods <- str_sub(times, start = -2)
hours
length(dat$starttime)
dat$start <- numeric(length(dat$starttime))
dat$end <- numeric(length(dat$endtime))
dat
dat$duration <- numeric(length(dat$start))
head(dat$starttime)
str_sub(times, -2)
str_sub(times, 1, nchar(times) - 2)
hours
dat$start <- numeric(length(dat$starttime))
dat$end <- numeric(length(dat$endtime))
dat$duration <- numeric(length(dat$start))
for (i in 1 : length(dat$start)) {
start <- dat$starttime[i]
end <- dat$endtime[i]
start_hour <- as.numeric(str_sub(start, 1, nchar(start) - 2))
start_period <- str_sub(start, -2)
end_hour <- as.numeric(str_sub(end, 1, nchar(end) - 2))
end_period <- str_sub(end, -2)
if (start_period == "PM") {
start_hour <- start_hour + 12
}
if (end_period == "PM") {
end_hour <- end_hour + 12
}
dat$start[i] <- start_hour
dat$end[i] <- end_hour
dat$duration[i] <- start_hour - end_hour
}
summary(dat$duration)
summary(dat$start)
summary(dat$end)
for (i in 1 : length(dat$start)) {
start <- dat$starttime[i]
end <- dat$endtime[i]
start_hour <- as.numeric(str_sub(start, 1, nchar(start) - 2))
start_period <- str_sub(start, -2)
end_hour <- as.numeric(str_sub(end, 1, nchar(end) - 2))
end_period <- str_sub(end, -2)
if (start_period == "PM") {
start_hour <- start_hour + 12
}
if (end_period == "PM") {
end_hour <- end_hour + 12
}
dat$start[i] <- start_hour
dat$end[i] <- end_hour
dat$duration[i] <- paste(start_hour, end_hour, sep = " - ")
}
typeof(dat$duration)
dat$duration <- character(length(dat$start))
for (i in 1 : length(dat$start)) {
start <- dat$starttime[i]
end <- dat$endtime[i]
start_hour <- as.numeric(str_sub(start, 1, nchar(start) - 2))
start_period <- str_sub(start, -2)
end_hour <- as.numeric(str_sub(end, 1, nchar(end) - 2))
end_period <- str_sub(end, -2)
if (start_period == "PM") {
start_hour <- start_hour + 12
}
if (end_period == "PM") {
end_hour <- end_hour + 12
}
dat$start[i] <- start_hour
dat$end[i] <- end_hour
dat$duration[i] <- paste(start_hour, end_hour, sep = " - ")
}
head(dat$duration)
for (i in 1 : length(dat$start)) {
start <- dat$starttime[i]
end <- dat$endtime[i]
start_hour <- as.numeric(str_sub(start, 1, nchar(start) - 2))
start_period <- str_sub(start, -2)
end_hour <- as.numeric(str_sub(end, 1, nchar(end) - 2))
end_period <- str_sub(end, -2)
if (start_period == "PM") {
start_hour <- start_hour + 12
}
if (end_period == "PM") {
end_hour <- end_hour + 12
}
dat$start[i] <- start_hour
dat$end[i] <- end_hour
dat$duration[i] <- paste(start_hour, end_hour, sep = " ~ ")
}
head(dat$duration)
summary(dat$duration)
loc1 <- "(37.7651967350509,-122.416451692902)"
str_replace(string = loc1, pattern = "\\(&\\)", replacement = "")
str_replace(string = loc1, pattern = "\\(", replacement = "")
str_replace_all(string = loc1, pattern = "\\(|\\)", replacement = "")
str_replace_all(string = loc1, pattern = "\(|\)", replacement = "")
str_replace_all(string = loc1, pattern = "\\(|\\)", replacement = "")
cat("\"")
cat("\\"")
''
lat_lon <- str_replace_all(string = loc1, pattern ="\\(|\\)", replacement = "")
lat_lon
lat_lon
str_split(string = lat_lon, pattern = ",")
locs <- c(
"(37.7651967350509,-122.416451692902)",
"(37.7907890558203,-122.402273431333)",
"(37.7111991003088,-122.394693339395)",
"(37.7773000262759,-122.394812784799)",
NA
)
str_replace_all(stirng = locs, pattern = "\\(|\\)", replacement = "")
str_replace_all(string = locs, pattern = "\\(|\\)", replacement = "")
locs <- str_replace_all(string = locs, pattern = "\\(|\\)", replacement = "")
lat_lon <- str_split(string = locs, pattern = ",")
lat_lon
?lapply
lat <- lapply(lat_lon, FUN = function(x) x[1])
source('~/Desktop/STAT 133/stat133-hws-fall17/lab11/lab11.R', echo=TRUE)
lat
lon <- apply(lat_lon, FUN = function(x) x[2])
lon <- lapply(lat_lon, FUN = function(x) x[2])
lon
lon <- sapply(lat_lon, FUN = function(x) x[2])
lon
lon <- lapply(lat_lon, FUN = function(x) x[2])
lon
names(dat)
dat$Location
locs <- dat$Location
locs
locs <- str_replace_all(string = locs, pattern = "\\(|\\)", replacement = "")
lat_lon <- str_split(string = locs, pattern = ",")
lat_lon <- str_split(string = locs, pattern = ",")
lat_lon <- str_split(string = locs, pattern = ",")
lat_lon
dat$lat <- numeric(length(dat$Location))
dat$lon <- numeric(length(dat$Location))
lat <- lapply(lat_lon, FUN = function(x) x[1])
lon <- lapply(lat_lon, FUN = function(x) x[2])
dat$lat <- as.numeric(unlist(lat))
dat$lon <- as.numeric(unlist(lon))
dat$lat
dat$lon
length(dat$lat)
length(dat$lon)
length(dat$Location)
plot(dat$lat, dat$lon)
library(RgoogleMaps)
?GetMap()
center <- c(mean(dat$lat, na.rm = TRUE), mean(dat$lon, na.rm = TRUE))
zoom <- min(MaxZoom(range(dat$lat, na.rm = TRUE),
range(dat$lon, na.rm = TRUE)))
map1 <- GetMap(center=center, zoom=zoom, destfile = "san-francisco.png")
map1 <- GetMap(center=center, zoom=zoom, destfile = "san-francisco.png")
PlotOnStaticMap(map1, dat$lat, dat$lon, col = "#ed4964", pch=20)
library(ggmap)
dat <- na.omit(dat)
?na.omit
sbbox <- make_bbox(lon = dat$lon, lat = dat$lat, f = .1)
?make_bbox()
sbbox
sf_map <- get_map(location = sbbox, maptype = "terrain", source = "google")
ggmap(sf_map) +
geom_point(data = dat,
mapping = aes(x = lon, y = lat),
color = "red", alpha = 0.2, size = 1)
dat$optionaltext[1:3]
foods <- dat$optionaltext[1:10]
str_detect(foods, pattern = "Burritos")
str_detect(foods, pattern = "burritos")
sum(str_detect(dat$optionaltext, pattern = "Burritos"))
sum(str_detect(dat$optionaltext, pattern = "burritos")
sum(str_detect(dat$optionaltext, pattern = "burritos")
)
sum(str_detect(dat$optionaltext, pattern = "burritos"))
library(dplyr)
dat %>%
filter(optionaltext == "Burritos" | optionaltext == "burritos")
dat %>%
filter(optionaltext = "Burritos" | optionaltext = "burritos")
dat %>%
filter(optionaltext = "Burritos" | optionaltext = "burritos")
dat %>%
filter(optionaltext = "Burritos" | optionaltext = "burritos")
dat %>%
filter(optionaltext == "Burritos" | optionaltext == "burritos")
dat %>%
filter(optionaltext == "Burritos")
?filter
dat$optionaltext == "Burritos"
dat$optionaltext == "Burritos"
dat$optionaltext == Burritos
dat %>%
filter(optionaltext == "burritos")
dat$optionaltext
str_detect(dat$optionaltext, pattern = "Burritos" | "burritos")
str_detect(dat$optionaltext, pattern = "Burritos|burritos")
str_detect(foods, pattern = "Burritos")
str_detect(foods, pattern = "Burritos\burritos")
str_detect(foods, pattern = "Burritos|burritos")
str_detect(dat$optionaltext, pattern = "Burritos|burritos")
burritos <- dat[str_detect(dat$optionaltext, pattern = "Burritos|burritos"). ]
burritos <- dat[str_detect(dat$optionaltext, pattern = "Burritos|burritos"), ]
burritos
burritos$optionaltext
sbbox <- make_bbox(lon = burritos$lon, lat = burritos$lat, f = .1)
sf_map <- get_map(location = ssbox, maptype = "terrain", source = "google")
ggmap(sf_map) +
geom_point(data = burritos,
mapping = aes(x = lon, y = lat),
color = "blue", alpha = 0.2, size = 1)
animals <- c('dog', 'cat', 'bird', 'dolphin', 'lion',
'zebra', 'tiger', 'wolf', 'whale', 'eagle',
'pig', 'osprey', 'kangaroo', 'koala')
grep('dog', animals)
grep('dog', animals, value = TRUE)
str_detect(animals, 'dog')
str_detect(animals, "dog", value = TRUE)
?str_detect()
str_extract(animals, "dog")
str_extract(animals, pattern = "o")
str_extract(animals, pattern = "o!")
str_extract(animals, pattern = "o?")
str_extract(animals, pattern = "o*")
str_extract(animals, pattern = "o*")
str_detectt(animals, pattern = "o*")
str_detect(animals, pattern = "o*")
str_detect(animals, "o?")
str_detect(animals, "o+")
str_extract(animals, "0+")
str_extract(animals, "o+")
animals[str_detect(animals, "o+")]
animals[str_detect(animals, "o{2}")]
animals[str_detect(animals, "[o]![oo]")]
animals[str_detect(animals, "[o][oo]")]
animals[str_detect(animals, "[o][!oo]")]
animals[str_detect(animals, "[o][^oo]")]
animals[str_detect(animals, "[aeiou][aeiou]")]
animals[str_detect(animals, "[^aeiou][^aeiou]")]
animals[str_detect(animals, "[^aeiou][^aeiou][^aeiou]")]
basic <- c('1', 'a', 'A', '&', '-', '^')
str_view(basic, '[0-9]')
animals[str_detect(animals, "[a-z][a-z][a-z]")]
animals[str_detect(animals, "[a-z]")]
animals[str_detect(animals, "[a-z]*")]
animals[str_detect(animals, "[a-z]?")]
animals[str_detect(animals, "[a-z][a-z]?")]
animals[str_detect(animals, "[a-z]{1}")]
animals[str_detect(animals, "[a-z]{1,3}")]
animals[str_detect(animals, "[a-z]{10,3}")]
animals[str_detect(animals, "[a-z]{10}")]
animals[str_detect(animals, "[a-z]{3}")]
animals[str_detect(animals, "[a-z]{3,3}")]
animals[str_detect(animals, "[a-z]{3}[^a-z]")]
animals[str_detect(animals, "[a-z]{3}[a-z]")]
animals[str_detect(animals, "[aeiou][aeiou]")]
animals[str_detect(animals, "[^aeiou][^aeiou]")]
animals[str_detect(animals, "[^aeiou][^aeiou][^aeiou]")]
animals[str_detect(animals, "[a-z]")]
animals[str_detect(animals, "[a-z]{4}")]
animals[str_detect(animals, "[^a-z]{4}")]
animals[str_detect(animals, "^[a-z]{4}")]
animals[str_detect(animals, "[a-z]^{4}")]
animals[str_detect(animals, "[a-z]{^4}")]
animals[str_detect(animals, "[a-z]{4}")]
animals[str_detect(animals, "[a-z]{5}")]
animals[str_detect(animals, "[a-z]{3,3}")]
animals[str_detect(animals, "[a-z]{3}[^]")]
animals[str_detect(animals, "[a-z]{3}[^^]")]
animals[str_detect(animals, "[a-z]{3}")]
animals[str_detect(animals, "[a-z]{3}$")]
animals[str_detect(animals, "[a-z]{3}\b")]
animals[str_detect(animals, "[a-z]{3}\\b")]
animals[str_detect(animals, "^[a-z]{3}$")]
animals[str_detect(animals, "\b[a-z]{3}\b")]
animals[str_detect(animals, "[a-z]{3}\b")]
animals[str_detect(animals, "\b[a-z]{3}\b")]
animals[str_detect(animals, "\b[a-z]{3}$")]
animals[str_detect(animals, "^b[a-z]{3}$")]
animals[str_detect(animals, "^[a-z]{3}$")]
animals[str_detect(animals, "^[a-z]{4}$")]
files <- c('sales1.csv', 'orders.csv', 'sales2.csv',
'sales3.csv', 'europe.csv', 'usa.csv', 'mex.csv',
'CA.csv', 'FL.csv', 'NY.csv', 'TX.csv',
'sales-europe.csv', 'sales-usa.csv', 'sales-mex.csv')
files[str_detect(files, "\\d")]
files[str_detect(files, "\\D")]
files[str_detect(files, "\\D")]
files[str_detect(files, "[^0-0]")]
files[str_detect(files, "[^0-9]")]
files[str_detect(files, "[^0-9]{1}")]
files[str_detect(files, "\\d")]
files[str_detect(files, "^\\d")]
files[str_detect(files, "\\d")]
files[str_detect(files, "\\^d")]
files[!str_detect(files, "\\d")]
files[str_detect(files, "[a-z]")]
names <- srt_sub(files, start = 1, end = -4)
names <- str_sub(files, start = 1, end = -4)
names
names <- str_sub(files, start = 1, end = -5)
names
files[str_detect(names, "\\d")]
files[!str_detect(names, "\\d")]
files[str_detect(names, "[a-z]")]
files[str_detect(names, "[A-Z]")]
files[str_detect(names, "\\-")]
files[!str_detect(names, "\\-")]
files_txt <- str_replace(files, pattern = "csv", replacement = "txt")
files_txt
str_split(files_txt, pattern = ".")
?str_split
str_split(files_txt, pattern = "\\.")
str_split(files_txt, pattern = "\\.")
split_char <- function(x) {
str_split(x, pattern = "")
}
split_char("Go")
split_char("Go Bears!")
split_chars("Expecto Patronum")
split_chars <- function(x) {
str_split(x, pattern = "")
}
split_chars("Go Bears!")
split_chars("Expecto Patronum")
split_chars("Expecto Patronum")[1]
split_chars("Expecto Patronum")[1][1]
split_chars("Expecto Patronum")[[1]]
split_chars("Expecto Patronum")[[1]][1]
length(split_chars("Expecto Patronum")[[1]])
paste0(split_chars("Expecto Patronum")[[1]])
paste(split_chars("Expecto Patronum")[[1]], collapse = "")
reverse_chars <- function(x) {
x <- split_chars(x)
y <- character(length(x[[1]]))
for (i in 1 : length(x[[1]])) {
y[length(x[[1]]) - i + 1] <- x[[1]][i]
}
reverse <- paste(y, collapse = "")
}
reverse_chars <- function(x) {
x <- split_chars(x)
y <- character(length(x[[1]]))
for (i in 1 : length(x[[1]])) {
y[length(x[[1]]) - i + 1] <- x[[1]][i]
}
reverse <- paste(y, collapse = "")
reverse
}
reverse_chars("gattaca")
reverse_chars("Lumox Maxima")
