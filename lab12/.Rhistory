geom_point() +
facet_wrap(~ Month)
dat %>%
ggvis(x = ~Solar.R, y = ~Wind, fill = ~Month) %>%
layer_points()
cov(1:10, 2:20)
cov(1:10, 11:20)
x <- c(1.0, -0.5, 1.3, -0.2, 0.2, 1.0, 1.8, -1.1, 0.6, -0.8)
x <- c(1.0, -0.5, 1.3, -0.2, 0.2, 1.0, 1.8, -1.1, 0.6, -0.8)
y <- c(0.4, -0.4, 0.6, 0.2, 0.3, 0.8, 0.8, -0.5, 0.5, 0.2)
y <- c(0.4, -0.4, 0.6, 0.2, 0.3, 0.8, 0.8, -0.5, 0.5, -0.2)
Sx <- length(x) * sum(x^2) - sum(x)^2
beta0 <- sum(x^2) * sum(y) - sum(x) * sum(x * y)
beta0 <- sum(x^2) * sum(y) - sum(x) * sum(x * y) / Sx
beta1 <- (-1) * sum(x) * sum(y) + length(x) * sum(x * y)
beta1 <- (-1) * sum(x) * sum(y) + length(x) * sum(x * y) / Sx
beta0 <- (sum(x^2) * sum(y) - sum(x) * sum(x * y)) / Sx
beta1 <- ((-1) * sum(x) * sum(y) + length(x) * sum(x * y)) / Sx
transpose
??transpose
t(x)
x
t(x) * x
x * t(x)
t(x) %*% x
?matrix
X <- matrix(rep(1, length(x)), x)
X
X <- matrix((rep(1, length(x)), x)
# projection matrix
P <- %*%
X
X <- matrix((rep(1, length(x)), x)
# projection matrix
P <- %*%
X <- matrix((rep(1, length(x)), x)
# projection matrix
P <- %*%
X <- matrix(rep(1, length(x)), x)
X
x
X <- matrix(rep(1, length(x)), x, nrow = length(n), ncol = 2)
x
X <- matrix(rep(1, length(x)), x, nrow = length(x), ncol = 2)
X
X <- matrix(c(rep(1, length(x)), x), nrow = length(x), ncol = 2)
X
?inverse
??inverse
t(X) %>% X
t(X) %*% X
t(t(X) %*% X)
tX_X <- (t(X) %*% X)
tX_X
inv_tX_X <- t(tX_X)
inv_tX_X <- matrix(c(tX_X[2, 2], -1 * tX_X[1, 2], -1 * tX_X[2, 1], tX_X[1, 1]))
inv_tX_X
inv_tX_X <- matrix(c(tX_X[2, 2], -1 * tX_X[1, 2], -1 * tX_X[2, 1], tX_X[1, 1],
nrow = nrow(tX_X), ncol = ncol(tX_X)))
inv_tX_X
tX_X
ncol(tX_X)
X <- matrix(c(rep(1, length(x)), x), nrow = length(x), ncol = 2)
tX_X <- (t(X) %*% X)
inv_tX_X <- matrix(c(tX_X[2, 2], -1 * tX_X[1, 2], -1 * tX_X[2, 1], tX_X[1, 1]),
nrow = nrow(tX_X), ncol = ncol(tX_X))
tX_X
inv_tX_X
inv_tX_X <- matrix(c(tX_X[2, 2], -1 * tX_X[1, 2], -1 * tX_X[2, 1], tX_X[1, 1]),
nrow = nrow(tX_X), ncol = ncol(tX_X)) / Sx
inv_tX_X
P <- X %*% inv_tX_X %*% t(X)
P
dig(10)
diag(10)
etm_var_beta0 <- (t(y) %*% (diag(length(x)) - P) %*% y) / (length(x) - 2)
etm_var_beta0
P
etm_var <- t(y) %*% (diag(length(x)) - P) %*% y
etm_var
etm_var <- t(y) %*% (diag(length(x)) - P) %*% y / (length(x) - 2) # p is 2 in this case, beta0 and beta1
etm_var_beta0 <- inv_tX_X[1, 1] * etm_var
etm_var_beta1 <- inv_tX_X[2, 2] * etm_var
etm_var_beta0
T0 <- beta0 / etm_var_beta0
beta0
etm_var_beta0
T0 <- beta0 / sqrt(etm_var_beta0)
T1 <- beta1 - 0.5 / sqrt(etm_var_beta1)
T0
T1
inv_tX_X
beta1
T1 <- (beta1 - 0.5) / sqrt(etm_var_beta1)
T0 <- beta0 / sqrt(etm_var_beta0)
T1 <- (beta1 - 0.5) / sqrt(etm_var_beta1)
T1
?qt
qt(0.975, df = 8)
t <- qt(0.975, df = 8)
t
T0
T1
pt(T0, df = 8)
pt(T1, df = 8)
T0
T1
pt(T0, df = 8)
T0 <- (beta0 - 0) / sqrt(etm_var_beta0)
T1 <- (beta1 - 0.5) / sqrt(etm_var_beta1)
pt(T0, df = 8)
pt(T1, df = 8)
p_val_T0 <- pt(T0, df = 8)
p_val_T1 <- pt(T1, df = 8)
p_val_T0
p_val_T1
t
CI_T0 <- c(beta0 - sqrt(etm_var_beta0) * t)
CI_T0 <- c(beta0 - sqrt(etm_var_beta0) * t, beta0 + sqrt(etm_var_beta0) * t)
CI_T0
beta 0
beta0
CI_beta1 <- c(beta1 - sqrt(etm_var_beta1) * t, beta1 + sqrt(etm_var_beta1) * t)
CI_beta1
beta1
x_1 <- c(1, 1)
x_1 <- c(1, 1)
y_1 <- c(0.4, 0.6)
x <- c(1, 1)
y <- c(0.4, 0.6)
Sx <- length(x) * sum(x^2) - sum(x)^2
beta0 <- (sum(x^2) * sum(y) - sum(x) * sum(x * y)) / Sx
beta1 <- ((-1) * sum(x) * sum(y) + length(x) * sum(x * y)) / Sx
x <- c(1, 1)
y <- c(0.4, 0.6)
Sx <- length(x) * sum(x^2) - sum(x)^2
Sx
X <- matrix(c(rep(1, length(x)), x), nrow = length(x), ncol = 2)
X
tX_X <- (t(X) %*% X)
tX_X
inv_tX_X <- matrix(c(tX_X[2, 2], -1 * tX_X[1, 2], -1 * tX_X[2, 1], tX_X[1, 1]),
nrow = nrow(tX_X), ncol = ncol(tX_X)) / Sx
inv_tX_X
tX_X
tX_y <- (t(x) %*% y)
tX_y
tX_X
tX_y
X <- matrix(c(rep(1, length(x)), x), nrow = length(x), ncol = 2) # X is singular
t(X)
tX_X
x <- c(1.0, -0.5, 1.3, -0.2, 0.2, 1.0, 1.8, -1.1, 0.6, -0.8)
y <- c(0.4, -0.4, 0.6, 0.2, 0.3, 0.8, 0.8, -0.5, 0.5, -0.2)
Sx <- length(x) * sum(x^2) - sum(x)^2
beta0 <- (sum(x^2) * sum(y) - sum(x) * sum(x * y)) / Sx
beta1 <- ((-1) * sum(x) * sum(y) + length(x) * sum(x * y)) / Sx
X <- matrix(c(rep(1, length(x)), x), nrow = length(x), ncol = 2)
tX_X <- (t(X) %*% X)
inv_tX_X <- matrix(c(tX_X[2, 2], -1 * tX_X[1, 2], -1 * tX_X[2, 1], tX_X[1, 1]),
nrow = nrow(tX_X), ncol = ncol(tX_X)) / Sx
P <- X %*% inv_tX_X %*% t(X)
etm_var <- t(y) %*% (diag(length(x)) - P) %*% y / (length(x) - 2) # p is 2 in this case, beta0 and beta1
etm_var_beta0 <- inv_tX_X[1, 1] * etm_var
etm_var_beta1 <- inv_tX_X[2, 2] * etm_var
T0 <- (beta0 - 0) / sqrt(etm_var_beta0)
T1 <- (beta1 - 0.5) / sqrt(etm_var_beta1)
p_val_T0 <- pt(T0, df = 8)
p_val_T1 <- pt(T1, df = 8)
t <- qt(0.975, df = 8)
CI_beta0 <- c(beta0 - sqrt(etm_var_beta0) * t, beta0 + sqrt(etm_var_beta0) * t)
CI_beta1 <- c(beta1 - sqrt(etm_var_beta1) * t, beta1 + sqrt(etm_var_beta1) * t)
beta0
etm_var_beta0
sqrt(etm_var_beta0)
T1
T0
t <- qt(0.975, df = 8)
t
p_val_T0 <- pt(T0, df = 8)
p_val_T0
1 - p_val_T0
(1 - p_val_T0) * 2
beta1
sqrt(etm_var_beta1)
T1
p_val_T1
p_val_T1
p_val_T0
p_val_T0 - 0.5
2*p_val_T0 - 1
p_val_T1
p_val_T1/2
p_val_T1
t
CI_beta0
CI_beta1
beta1
beta0plus1 <- beta0 + beta1
# vectors
x <- c(1.0, -0.5, 1.3, -0.2, 0.2, 1.0, 1.8, -1.1, 0.6, -0.8)
y <- c(0.4, -0.4, 0.6, 0.2, 0.3, 0.8, 0.8, -0.5, 0.5, -0.2)
# define Sx
Sx <- length(x) * sum(x^2) - sum(x)^2
# estimates
beta0 <- (sum(x^2) * sum(y) - sum(x) * sum(x * y)) / Sx
beta1 <- ((-1) * sum(x) * sum(y) + length(x) * sum(x * y)) / Sx
# matrix X and inverse of (t(X) %*% X)
X <- matrix(c(rep(1, length(x)), x), nrow = length(x), ncol = 2)
tX_X <- (t(X) %*% X)
inv_tX_X <- matrix(c(tX_X[2, 2], -1 * tX_X[1, 2], -1 * tX_X[2, 1], tX_X[1, 1]),
nrow = nrow(tX_X), ncol = ncol(tX_X)) / Sx
# projection matrix
P <- X %*% inv_tX_X %*% t(X)
# estimated variance of estimates
etm_var <- t(y) %*% (diag(length(x)) - P) %*% y / (length(x) - 2) # p is 2 in this case, beta0 and beta1
etm_var_beta0 <- inv_tX_X[1, 1] * etm_var
etm_var_beta1 <- inv_tX_X[2, 2] * etm_var
# (a),(b)
# hypothesis tests
# H0 : mean of beta0 is 0 and of beta1 is 0.5
# T0 and T1 follows t-distribution with df = 8(10(length(x)) - 2(beta0 and beta1))
T0 <- (beta0 - 0) / sqrt(etm_var_beta0)
T1 <- (beta1 - 0.5) / sqrt(etm_var_beta1)
# p-value of T0 and T1
p_val_T0 <- pt(T0, df = 8)
p_val_T1 <- pt(T1, df = 8)
# Both are greater than significant level of 5%
# quantile with sginicant level of 5%
t <- qt(0.975, df = 8)
# (d), (e)
# confidence interval
CI_beta0 <- c(beta0 - sqrt(etm_var_beta0) * t, beta0 + sqrt(etm_var_beta0) * t)
CI_beta1 <- c(beta1 - sqrt(etm_var_beta1) * t, beta1 + sqrt(etm_var_beta1) * t)
# (c), (f)
# x = 1
x <- c(1, 1)
y <- c(0.4, 0.6)
# matrix X, (t(X) %*% X) and (t(x) %*% y)
X <- matrix(c(rep(1, length(x)), x), nrow = length(x), ncol = 2) # X is singular
tX_X <- (t(X) %*% X)
tX_y <- (t(x) %*% y)
#
beta0plus1 <- beta0 + beta1
inv_tX_X
sum(inv_tX_X)
etm_var
sum(inv_tX_X) * etm_var
beta0plus1 <- beta0 + beta1
sum(inv_tX_X) * etm_var
etm_var_beta0plus1 <- sum(inv_tX_X) * etm_var
T0plus1 <- (beta0plus1 - 0.5) / sqrt(etm_var_beta0plus1)
T0plus1
beta0plus1
etm_var_beta0plus1
sqrt(etm_var_beta0plus1)
T0plus1
beta0plus1 <- beta0 + beta1
etm_var_beta0plus1 <- sum(inv_tX_X) * etm_var
T0plus1 <- (beta0plus1 - 0.5) / sqrt(etm_var_beta0plus1)
T0plus1
t
p_val_T0plus1 <- pt(T0plus1, df = 8)
p_val_T0plus1
1 - p_val_T0plus1
t
CI_beta0plus1 <- c(beta0plus1 - sqrt(etm_var_beta0plus1) * t, beta0plus1 + sqrt(etm_var_beta0plus1) * t)
CI_beta0plus1
exp(2)
exp(2) - 1
(exp(2) - 1) / 6
(3*exp(2) + 11)/6
sqrt((3*exp(2) + 11)/6)
sqrt(1/3) + sqrt((exp(2) - 1) / 2)
library(shiny); runApp('Desktop/STAT 133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('Desktop/STAT 133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('Desktop/STAT 133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('Desktop/STAT 133/stat133-hws-fall17/hw04/app/gradevis.R')
runApp('Desktop/STAT 133/stat133-hws-fall17/hw04/app/gradevis.R')
basket <- "https://www.basketball-reference.com"
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
basket <- "https://www.basketball-reference.com"
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
rm(list = ls())
library(XML)
library(xml2)
library(rvest)
library(magrittr)
library(stringr)
basket <- "https://www.basketball-reference.com"
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
gsw <- "/teams/GSW/2017.html"
gsw_url <- paste0(basket, gsw)
gsw <- "/teams/GSW/2017.html"
basket <- "https://www.basketball-reference.com"
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
gsw <- "/teams/GSW/2017.html"
gsw_url <- paste0(basket, gsw)
download.file(gsw_url, 'gsw-roster-2017.html')
setwd("~/Desktop/STAT 133/stat133-hws-fall17/lab12")
download.file(gsw_url, 'gsw-roster-2017.html')
readHTMLTable("gsw-roster-2017.html")
gsw_roster <- readHTMLTable("gsw-roster-2017.html")
bos <- "/teams/BOS/2017.html"
bos_url <- paste0(basket, bos)
download.file(bos_url, "bos-roster-2017.html")
bos_roster <- readHTMLTable("bos-roster-2017.html")
bos_roster
bos_roster
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc %>%
html_nodes("h1") %>%
html_text()
xml_doc %>%
html_nodes("h2") %>%
html_text()
xml_doc <- read_html(nba_html)
xml_doc %>%
html_nodes("h2") %>%
html_text()
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
xml_doc %>%
html_nodes("h2") %>%
html_text()
xml_doc %>%
html_nodes("strong") %>%
html_text()
xml_doc %>%
html_nodes("button") %>%
html_text()
href <- xml_doc %>%
html_nodes("table") %>%
extract(1:2) %>%
html_nodes("a") %>%
html_attr("href")
herf
href
href <- xml_doc %>%
html_nodes("table") %>%
extract(1:2) %>%
html_nodes("a") %>%
html_attr("href")
href <- xml_doc %>%
html_nodes("table") %>%
extract(1:2) %>%
html_nodes("a") %>%
html_attr("href")
attr_team <- str_sub(href, start = 8, end = 10)
file <- paste0(attr_team, "-roster-2017.csv")
file
basket
href
href[1]
xml_doc %>%
html_nodes("table") %>%
extract(1)
xml_doc %>%
html_nodes("table") %>%
extract(1) %>%
html_table()
library(XML)
library(xml2)
library(rvest)
library(magrittr)
library(stringr)
paste0(basket, href)
team_url <- paste0(basket, href)
xml_dco <- read_html(team_url[1])
xml_dco %>%
html_nodes("table")
xml_dco %>%
html_nodes("table")
xml_dco %>%
html_nodes("table") %>%
html_table()
file
?write.csv
setwd("~/Desktop/STAT 133/stat133-hws-fall17/lab12")
for(i in seq(along = team_url)) {
doc <- read_html(team_url[i])
table <- doc %>%
html_nodes("table") %>%
html_table()
write.csv(table, file[i])
}
read.csv(file)
file
read.csv(file[1])
read.csv(file[2])
?read.csv
tables <- paste0(table, 1:30)
tables
tables <- paste0("table", 1:30)
tables
table[1]
tables[1]
file
DF <- read.csv(file[1])
DF
file[-1]
file
?rbind
df <- read.csv(f)      # read the file
for (i in file[-1]){
df <- read.csv(file[i])      # read the file
DF <- rbind(DF, df)    # append the current file
}
DF
DF <- read.csv(file[1])
DF
seq(along = file)
seq(along = file)[2:]
seq(along = file)
for (i in 2:30){
df <- read.csv(file[i])      # read the file
DF <- rbind(DF, df)    # append the current file
}
DF
team
attr_team
DF <- read.csv(file[1])
DF
nrow(DF)
DF$Team <- rep(attr_team[1], nrow(DF))
DF
DF <- read.csv(file[1])
DF$Team <- rep(attr_team[1], nrow(DF))
for (i in 2:30){
df <- read.csv(file[i])     # read the file
df$Team <- rep(attr_team[i], nrow(df))      # add Team column
DF <- rbind(DF, df)     # append the current file
}
DF
write.csv(DF, "nba-rosters-2017.csv")
table
file
attr_team <- str_sub(href, start = 8, end = 10)
file <- paste0(attr_team, "-roster-2017.csv")
team_url <- paste0(basket, href)
for(i in seq(along = team_url)) {
doc <- read_html(team_url[i])
table <- doc %>%
html_nodes("table") %>%
html_table()
write.csv(table, paste0("data/", file[i])
}
# global table
DF <- read.csv(file[1])
DF$Team <- rep(attr_team[1], nrow(DF))
for (i in 2:30){
df <- read.csv(file[i])     # read the file
df$Team <- rep(attr_team[i], nrow(df))      # add Team column
DF <- rbind(DF, df)     # append the current file
}
# save global table
write.csv(DF, "nba-rosters-2017.csv")
basket <- "https://www.basketball-reference.com"
gsw <- "/teams/GSW/2017.html"
gsw_url <- paste0(basket, gsw)
download.file(gsw_url, "gsw-roster-2017.html")
gsw_roster <- readHTMLTable("gsw-roster-2017.html")
bos <- "/teams/BOS/2017.html"
bos_url <- paste0(basket, bos)
download.file(bos_url, "bos-roster-2017.html")
bos_roster <- readHTMLTable("bos-roster-2017.html")
nba_html <- paste0(basket, "/leagues/NBA_2017.html")
xml_doc <- read_html(nba_html)
xml_doc %>%
html_nodes("h1") %>%
html_text()
xml_doc %>%
html_nodes("strong") %>%
html_text()
xml_doc %>%
html_nodes("button") %>%
html_text()
href <- xml_doc %>%
html_nodes("table") %>%
extract(1:2) %>%
html_nodes("a") %>%
html_attr("href")
xml_doc %>%
html_nodes("table") %>%
extract(1) %>%
html_table()
attr_team <- str_sub(href, start = 8, end = 10)
file <- paste0(attr_team, "-roster-2017.csv")
team_url <- paste0(basket, href)
for(i in seq(along = team_url)) {
doc <- read_html(team_url[i])
table <- doc %>%
html_nodes("table") %>%
html_table()
write.csv(table, paste0("data/", file[i]))
}
DF <- read.csv(paste0("data/", file[1]))
DF$Team <- rep(attr_team[1], nrow(DF))
DF
DF <- read.csv(paste0("data/", file[1]))
DF$Team <- rep(attr_team[1], nrow(DF))
for (i in 2:30){
df <- read.csv(paste0("data/", file[i]))     # read the file
df$Team <- rep(attr_team[i], nrow(df))      # add Team column
DF <- rbind(DF, df)     # append the current file
}
write.csv(DF, "nba-rosters-2017.csv")
DF
